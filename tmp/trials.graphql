schema
  @core(feature: "https://specs.apollo.dev/core/v0.1")
  @core(feature: "https://specs.apollo.dev/join/v0.1")
{
  query: Query
}

###directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA
directive @core(feature: String!) repeatable on SCHEMA

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet) on FIELD_DEFINITION

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR

directive @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE

directive @join__owner(graph: join__Graph!) on OBJECT | INTERFACE

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

scalar join__FieldSet

enum join__Graph {
  BOOKS @join__graph(name: "books" url: "http://localhost:4001")
  REVIEWS @join__graph(name: "reviews" url: "http://localhost:4002")
}

interface Node
@join__type(graph: BOOKS)
@join__type(graph: REVIEWS)
{
 id: ID!
}

type Author implements Node
  @join__implements(graph: BOOKS, interface: "Node")
  @join__owner(graph: BOOKS)
  @join__type(graph: BOOKS, key: "id")
{
  id: ID! @join__field(graph: BOOKS)
  name: String @join__field(graph: BOOKS)
}

type Book implements Node
  @join__implements(graph: BOOKS, interface: "Node")
  @join__owner(graph: BOOKS)
  @join__type(graph: BOOKS, key: "id")
  @join__type(graph: REVIEWS, key: "id")
{
  id : ID!
  title: String @join__field(graph: BOOKS)
  author: Author @join__field(graph: BOOKS)
  reviews: [Review] @join__field(graph: REVIEWS)
}

type Review implements Node
  @join__implements(graph: REVIEWS, interface: "Node")
  @join__owner(graph: REVIEWS)
  @join__type(graph: REVIEWS, key: "id")
{
  id: ID! @join__field(graph: REVIEWS)
  body: String @join__field(graph: REVIEWS)
 
#  book: Book @join__field(graph: BOOKS)
}


type Query {
  node(id: ID!): Node @join__field(graph: BOOKS)
  books: [Book] @join__field(graph: BOOKS)
  reviews: [Review] @join__field(graph: REVIEWS)
}
